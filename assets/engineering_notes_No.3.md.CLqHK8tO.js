import{_ as o,c as t,o as a,ab as r}from"./chunks/framework.B6eZocN-.js";const _=JSON.parse('{"title":"Note 3","description":"","frontmatter":{},"headers":[],"relativePath":"engineering/notes/No.3.md","filePath":"engineering/notes/No.3.md","lastUpdated":1746583895000}'),c={name:"engineering/notes/No.3.md"};function d(n,e,s,l,i,S){return a(),t("div",null,e[0]||(e[0]=[r('<h1 id="note-3" tabindex="-1">Note 3 <a class="header-anchor" href="#note-3" aria-label="Permalink to &quot;Note 3&quot;">​</a></h1><h2 id="如何清理源码里面没有被应用的代码-主要是-js、ts、css-代码" tabindex="-1">如何清理源码里面没有被应用的代码，主要是 JS、TS、CSS 代码 <a class="header-anchor" href="#如何清理源码里面没有被应用的代码-主要是-js、ts、css-代码" aria-label="Permalink to &quot;如何清理源码里面没有被应用的代码，主要是 JS、TS、CSS 代码&quot;">​</a></h2><h3 id="针对-js、ts-代码" tabindex="-1">针对 <code>JS</code>、<code>TS</code> 代码 <a class="header-anchor" href="#针对-js、ts-代码" aria-label="Permalink to &quot;针对 `JS`、`TS` 代码&quot;">​</a></h3><ol><li><a href="https://eslint.nodejs.cn/" target="_blank" rel="noreferrer">ESlint</a>（在源码中进行检测并提示）、<a href="https://terser.org/" target="_blank" rel="noreferrer">Terser</a>（打包后自动完成一些裁剪）：读取源码文件 -&gt; 生成抽象语法树（<code>AST</code>） -&gt; 分析 -&gt; ... 都只能针对 <code>JS</code> 文件不支持 <code>CSS</code> 且只能是单模块（单文件），例如一个模块导出，单另一个模块未使用，这种情况无法处理。</li><li>打包构建工具（如 <code>Webpack</code>、<code>Rollup</code>）的树摇优化（<code>Tree Shaking</code>）功能：读取源码文件 -&gt; 分析模块依赖关系 -&gt; 生成新的 <code>AST</code> 并进行优化 -&gt; 生成新的代码 -&gt; ... 也只能支持 <code>JS</code> 或 <code>TS</code>（编译后也是 <code>JS</code>）不支持 <code>CSS</code>，且必须是 <code>ESM</code> 的模块化标准（不支持 <code>CommonJS</code>），支持多模块（多文件），例如一个模块导出，单另一个模块未使用，这种情况也可以处理。 不支持动态导入，比如：<code>require</code> 或 <code>ESM</code> 的 <code>import()</code> 方式。因为它是静态分析，即只能在编译时态进行静态分析。</li></ol><h3 id="针对-css-代码" tabindex="-1">针对 <code>CSS</code> 代码 <a class="header-anchor" href="#针对-css-代码" aria-label="Permalink to &quot;针对 `CSS` 代码&quot;">​</a></h3><ol><li>使用 <a href="https://purgecss.com/" target="_blank" rel="noreferrer">PurgeCSS</a>，对整个工程代码进行分析找到未被使用的类，即未被应用的代码，然后裁剪掉</li></ol>',6)]))}const g=o(c,[["render",d]]);export{_ as __pageData,g as default};
