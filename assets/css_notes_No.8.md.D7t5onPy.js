import{_ as t,C as n,c as l,o as e,j as i,G as h,ab as p,a as k}from"./chunks/framework.lyXFPvBJ.js";const C=JSON.parse('{"title":"Note 8","description":"","frontmatter":{},"headers":[],"relativePath":"css/notes/No.8.md","filePath":"css/notes/No.8.md","lastUpdated":1747046328000}'),d={name:"css/notes/No.8.md"};function o(r,s,g,E,c,y){const a=n("BackTop");return e(),l("div",null,[s[0]||(s[0]=i("h1",{id:"note-8",tabindex:"-1"},[k("Note 8 "),i("a",{class:"header-anchor",href:"#note-8","aria-label":'Permalink to "Note 8"'},"​")],-1)),h(a),s[1]||(s[1]=p(`<h2 id="css3-定位" tabindex="-1">CSS3 定位 <a class="header-anchor" href="#css3-定位" aria-label="Permalink to &quot;CSS3 定位&quot;">​</a></h2><p><code>positon</code>属性指定了元素的定位类型（静态的，相对的，绝对的或固定的）,默认值：<code>static</code></p><p>JavaScript语法：<code>object.style.position=&quot;absolute&quot;</code></p><table tabindex="0"><thead><tr><th style="text-align:left;">值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">static</td><td style="text-align:left;"><strong>默认值。没有定位</strong>，元素<strong>出现在正常的流中</strong>（忽略 <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code> 或者 <code>z-index</code> 声明）。</td></tr><tr><td style="text-align:left;">absolute</td><td style="text-align:left;">生成<strong>绝对定位</strong>的元素，<strong>相对于 <code>static</code> 定位以外的第一个父元素进行定位</strong>。<br>绝对定位的元素的位置<strong>相对于最近的已定位父元素，如果元素没有已定位的父元素，那么它的位置相对于<code>&lt;html&gt;</code></strong><br>元素的位置通过 <code>left</code>, <code>top</code>, <code>right</code> 以及 <code>bottom</code> 属性进行规定。能很准确的将元素移动到想要的位置。<br><strong>使元素的位置与文档流无关，因此不占据空间</strong>。</td></tr><tr><td style="text-align:left;">fixed</td><td style="text-align:left;">生成<strong>固定定位</strong>的元素，<strong>相对于浏览器窗口进行定位</strong>。<br>元素的位置通过 <code>left</code>, <code>top</code>, <code>right</code> 以及 <code>bottom</code> 属性进行规定。<br><strong><code>Fixed</code>定位使元素的位置与文档流无关，因此不占据空间</strong>。</td></tr><tr><td style="text-align:left;">relative</td><td style="text-align:left;">生成<strong>相对定位</strong>的元素，<strong>相对于元素默认的位置进行定位（相对其正常位置）</strong>。<br>因此，<code>left:20</code> 会向元素的 <code>LEFT</code> 位置添加 <code>20</code> 像素。同样通过<code>top</code>、<code>bottom</code>、<code>left</code>以及<code>bottom</code>来明确元素的位置。<br><strong>移动相对定位元素，但它原本所占的空间不会改变</strong>。</td></tr><tr><td style="text-align:left;">sticky</td><td style="text-align:left;">粘性定位，<strong>该定位基于用户滚动的位置</strong>。<br>它的行为就像 <code>position:relative;</code> 而当页面滚动超出目标区域时，它的表现就像 <code>position:fixed;</code>，它会固定在目标位置。<br>粘性定位的元素<strong>依赖于用户的滚动</strong>，在 <code>position:relative</code> 与 <code>position:fixed</code> 定位之间切换。<br>它的行为就像 <code>position:relative;</code> 而<strong>当页面滚动超出目标区域时，它的表现就像</strong> <code>position:fixed;</code>，它<strong>会固定在目标位置</strong>。<br>元素定位表现为<strong>在跨越特定阈值前为相对定位，之后为固定定位</strong>。<br>这个<strong>特定阈值指的是</strong> <code>top</code>, <code>right</code>, <code>bottom</code> 或 <code>left</code> 之一，换言之，指定 <code>top</code>, <code>right</code>, <code>bottom</code> 或 <code>left</code> 四个阈值其中之一，<strong>才可使粘性定位生效</strong>。否则其行为与相对定位相同。</td></tr><tr><td style="text-align:left;">inherit</td><td style="text-align:left;">规定应该<strong>从父元素继承 <code>position</code> 属性的值</strong>。</td></tr><tr><td style="text-align:left;">initial</td><td style="text-align:left;">设置该属性为默认值，详情查看 <code>CSS initial</code> 关键字。</td></tr></tbody></table><h2 id="ppi-dpi-dpr" tabindex="-1"><code>PPI</code> &amp; <code>DPI</code> &amp; <code>DPR</code> <a class="header-anchor" href="#ppi-dpi-dpr" aria-label="Permalink to &quot;\`PPI\` &amp; \`DPI\` &amp; \`DPR\`&quot;">​</a></h2><h3 id="ppi-pixels-per-inch-每英寸像素数" tabindex="-1"><code>PPI</code> (Pixels Per Inch，<strong>每英寸像素数</strong>) <a class="header-anchor" href="#ppi-pixels-per-inch-每英寸像素数" aria-label="Permalink to &quot;\`PPI\` (Pixels Per Inch，**每英寸像素数**)&quot;">​</a></h3><ul><li><strong>定义</strong>：<code>PPI</code> 是指在一英寸长度内可以容纳的像素数量。它是一个度量单位，用来衡量显示设备的像素密度。<code>PPI</code> 通常用于屏幕显示设备，如手机、电视和电脑显示器</li><li><strong>应用</strong>：<code>PPI</code> 常用于描述屏幕的清晰度。<code>PPI</code> 越高，屏幕显示的图像就越细腻，细节也就越丰富。</li></ul><h3 id="dpi-dots-per-inch-每英寸点数" tabindex="-1"><code>DPI</code> (Dots Per Inch，<strong>每英寸点数</strong>) <a class="header-anchor" href="#dpi-dots-per-inch-每英寸点数" aria-label="Permalink to &quot;\`DPI\` (Dots Per Inch，**每英寸点数**)&quot;">​</a></h3><ul><li><strong>定义</strong>：<code>DPI</code> 是一个更通用的术语，通常用来描述打印分辨率，即每英寸长度内可以打印的点（墨点）数量。</li><li><strong>应用</strong>：<code>DPI</code> 用于衡量打印机、扫描仪等输出设备的分辨率。<code>DPI</code> 越高，打印或扫描的图像质量就越高。</li><li><strong>显示DPI</strong>：图像在屏幕上显示时的分辨率，取决于屏幕的尺寸和分辨率</li></ul><h3 id="dpr-device-pixel-ratio-设备像素比" tabindex="-1"><code>DPR</code> (Device Pixel Ratio，<strong>设备像素比</strong>) <a class="header-anchor" href="#dpr-device-pixel-ratio-设备像素比" aria-label="Permalink to &quot;\`DPR\` (Device Pixel Ratio，**设备像素比**)&quot;">​</a></h3><ul><li><strong>定义</strong>：<code>DPR</code> 是指显示设备的物理像素与CSS像素的比率。CSS像素是一种虚拟的像素单位，用于网页设计中。</li><li><strong>应用</strong>：<code>DPR</code> 用于处理高分辨率显示设备上的图像缩放问题。例如，一个具有<code>2</code>倍<code>DPR</code>的设备，其物理像素是CSS像素的两倍。</li></ul><h3 id="区别说明" tabindex="-1">区别说明 <a class="header-anchor" href="#区别说明" aria-label="Permalink to &quot;区别说明&quot;">​</a></h3><ul><li><strong>应用领域</strong>：<code>PPI</code> 主要用于屏幕显示设备的像素密度，而 <code>DPI</code> 主要用于打印和扫描设备的分辨率。<code>DPR</code> 是一个与Web设计相关的术语，用于处理不同分辨率设备上的图像和布局。</li><li><strong>度量单位</strong>：<code>PPI</code> 和 <code>DPI</code> 都是以英寸为单位来度量像素或点的数量，但它们分别用于不同的设备和场景。</li><li><strong>与设备分辨率的关系</strong>：<code>PPI</code> 是设备固有的属性，而 <code>DPI</code> 通常与打印质量相关。<code>DPR</code> 是一个比率，用来调整Web内容在不同设备上的表现。</li></ul><h2 id="css-兄弟选择器" tabindex="-1"><code>CSS</code> 兄弟选择器(<code>+</code> &amp; <code>~</code>) <a class="header-anchor" href="#css-兄弟选择器" aria-label="Permalink to &quot;\`CSS\` 兄弟选择器(\`+\` &amp; \`~\`)&quot;">​</a></h2><p>在 <code>CSS</code> 中，兄弟选择器（Sibling Selectors）用于选择与某个元素具有相同父元素的相邻或后续兄弟元素。以下是两种常见的兄弟选择器及其用法：</p><h3 id="_1-相邻兄弟选择器-adjacent-sibling-selector" tabindex="-1"><strong>1. 相邻兄弟选择器（Adjacent Sibling Selector）</strong> <a class="header-anchor" href="#_1-相邻兄弟选择器-adjacent-sibling-selector" aria-label="Permalink to &quot;**1. 相邻兄弟选择器（Adjacent Sibling Selector）**&quot;">​</a></h3><br><p>语法：<code>element1 + element2</code><br> 作用：选择紧跟在 <code>element1</code> <strong>之后</strong>的第一个 <code>element2</code> 元素。</p><h4 id="示例" tabindex="-1">示例： <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例：&quot;">​</a></h4><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;标题&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;段落1（被选中）&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 紧跟在 h2 后的第一个 p --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;段落2&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 仅段落1变为红色 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_2-通用兄弟选择器-general-sibling-selector" tabindex="-1"><strong>2. 通用兄弟选择器（General Sibling Selector）</strong> <a class="header-anchor" href="#_2-通用兄弟选择器-general-sibling-selector" aria-label="Permalink to &quot;**2. 通用兄弟选择器（General Sibling Selector）**&quot;">​</a></h3><br><p>语法：<code>element1 ~ element2</code><br> 作用：选择 <code>element1</code> <strong>之后</strong>的所有 <code>element2</code> 兄弟元素（不要求直接相邻）。</p><h4 id="示例-1" tabindex="-1">示例： <a class="header-anchor" href="#示例-1" aria-label="Permalink to &quot;示例：&quot;">​</a></h4><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;标题&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;段落1（被选中）&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;分隔块&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;段落2（被选中）&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 所有 h2 后的 p 均被选中 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 段落1和段落2均变为蓝色 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="核心区别" tabindex="-1"><strong>核心区别</strong> <a class="header-anchor" href="#核心区别" aria-label="Permalink to &quot;**核心区别**&quot;">​</a></h3><table tabindex="0"><thead><tr><th><strong>特性</strong></th><th><code>+</code>（相邻兄弟）</th><th><code>~</code>（通用兄弟）</th></tr></thead><tbody><tr><td><strong>选择范围</strong></td><td>仅紧邻的下一个元素</td><td>后续所有符合条件的元素</td></tr><tr><td><strong>间隔元素</strong></td><td>不允许中间有其他元素</td><td>允许中间有其他元素</td></tr><tr><td><strong>严格性</strong></td><td>严格（直接相邻）</td><td>宽松（后续任意位置）</td></tr></tbody></table><h3 id="实际应用场景" tabindex="-1"><strong>实际应用场景</strong> <a class="header-anchor" href="#实际应用场景" aria-label="Permalink to &quot;**实际应用场景**&quot;">​</a></h3><ol><li><p><strong>表单验证提示</strong>：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:invalid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 输入框无效时显示紧邻的错误提示 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p><strong>列表项样式控制</strong>：</p></li></ol><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.active</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 激活项之后的所有列表项变半透明 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="3"><li><strong>标题与段落间距</strong>：</li></ol><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  margin-top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 消除标题后第一个段落的上边距 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="注意事项" tabindex="-1"><strong>注意事项</strong> <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;**注意事项**&quot;">​</a></h3><ol><li><strong>顺序敏感</strong>： 兄弟选择器仅对<strong>目标元素之后的兄弟</strong>生效。例如：</li></ol><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;段落A&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;标题&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;段落B&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><code>h2 + p</code> 会选中 <code>段落B</code>，但 <code>p + h2</code> 无效（因 <code>h2</code> 在 <code>p</code> 之后）。</p><ol start="2"><li><strong>兼容性</strong>：</li></ol><ul><li>所有现代浏览器均支持 <code>+</code> 和 <code>~</code>（包括 IE8+）。</li></ul><ol start="3"><li><strong>性能影响</strong>：<br> 兄弟选择器的性能通常较好，但应避免在深层嵌套或超大文档中滥用。</li></ol><h3 id="总结" tabindex="-1"><strong>总结</strong> <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;**总结**&quot;">​</a></h3><ul><li><strong><code>+</code></strong>：用于精准控制<strong>直接相邻</strong>的兄弟元素。</li><li><strong><code>~</code></strong>：用于批量选择<strong>后续所有符合条件的</strong>兄弟元素。</li></ul><p>合理使用兄弟选择器可以减少冗余的类名定义，提升代码可维护性。</p><h2 id="width-100-的百分比参考什么" tabindex="-1"><code>width: 100%</code> 的百分比参考什么？ <a class="header-anchor" href="#width-100-的百分比参考什么" aria-label="Permalink to &quot;\`width: 100%\` 的百分比参考什么？&quot;">​</a></h2><p>在 CSS 中，<strong><code>width: 100%</code> 的百分比是相对于元素的包含块（Containing Block）的宽度计算的</strong>，但具体参考的是包含块的 <strong>内容区域（content box）</strong> 还是 <strong>边框盒（border box）</strong>，取决于元素的定位方式和包含块的定义。</p><h3 id="一、包含块-containing-block-的定义" tabindex="-1"><strong>一、包含块（Containing Block）的定义</strong> <a class="header-anchor" href="#一、包含块-containing-block-的定义" aria-label="Permalink to &quot;**一、包含块（Containing Block）的定义**&quot;">​</a></h3><br><p>包含块是 <code>CSS</code> 布局中计算元素尺寸和位置的参考基准，其确定规则如下：</p><table tabindex="0"><thead><tr><th><strong>元素定位方式</strong></th><th><strong>包含块的定义</strong></th></tr></thead><tbody><tr><td><strong>静态定位（static）</strong></td><td>最近的<strong>块级祖先元素</strong>的<strong>内容区域（content box）</strong>。</td></tr><tr><td><strong>相对定位（relative）</strong></td><td>同静态定位，但元素自身可通过 <code>top/right/bottom/left</code> 偏移。</td></tr><tr><td><strong>绝对定位（absolute）</strong></td><td>最近的<strong>非 <code>static</code> 定位祖先元素</strong>的<strong>内边距区域（padding box）</strong>。</td></tr><tr><td><strong>固定定位（fixed）</strong></td><td>视口（viewport）的<strong>内边距区域</strong>（通常等同于视口尺寸）。</td></tr><tr><td><strong>粘性定位（sticky）</strong></td><td>最近的滚动祖先的内容区域，若没有则同相对定位。</td></tr></tbody></table><h3 id="二、width-100-的具体行为" tabindex="-1"><strong>二、<code>width: 100%</code> 的具体行为</strong> <a class="header-anchor" href="#二、width-100-的具体行为" aria-label="Permalink to &quot;**二、\`width: 100%\` 的具体行为**&quot;">​</a></h3><ul><li><p><strong>默认行为</strong>：<br> 若未显式设置 <code>box-sizing</code>，元素的 <code>width: 100%</code> 是相对于包含块的 <strong>内容区域宽度（content box）</strong> 计算的。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.parent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 内容区域宽度为 200px */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 内边距增加 40px（左右各 20px） */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 边框增加 10px（左右各 5px） */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 实际宽度为 200px（父元素内容区域宽度） */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>子元素的 <code>width: 100%</code> 仅覆盖父元素的内容区域，<strong>不包含父元素的 padding 和 border</strong>。</li><li>若子元素自身有 <code>padding</code> 或 <code>border</code>，可能导致溢出父容器（需结合 <code>box-sizing</code> 调整）。</li></ul></li><li><p><strong>绝对定位的特殊情况</strong>：<br> 绝对定位元素的 <code>width: 100%</code> 是相对于包含块的 <strong>内边距区域宽度（padding box）</strong> 计算的（即包含 <code>padding</code> 的宽度）。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.parent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">relative</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 内边距增加 40px */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">absolute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 实际宽度为 240px（父内容区域 200px + 内边距 40px） */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul><h3 id="三、box-sizing-的影响" tabindex="-1"><strong>三、<code>box-sizing</code> 的影响</strong> <a class="header-anchor" href="#三、box-sizing-的影响" aria-label="Permalink to &quot;**三、\`box-sizing\` 的影响**&quot;">​</a></h3><br><p>通过 <code>box-sizing</code> 属性，可以改变 <code>width</code> 的参考基准：</p><table tabindex="0"><thead><tr><th><strong><code>box-sizing</code> 值</strong></th><th><strong><code>width: 100%</code> 的参考基准</strong></th></tr></thead><tbody><tr><td><code>content-box</code>（默认）</td><td>包含块的<strong>内容区域宽度</strong>（不包含 padding/border）。</td></tr><tr><td><code>border-box</code></td><td>包含块的<strong>边框盒宽度</strong>（包含 padding 和 border）。</td></tr></tbody></table><h4 id="示例-2" tabindex="-1">示例： <a class="header-anchor" href="#示例-2" aria-label="Permalink to &quot;示例：&quot;">​</a></h4><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.parent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  box-sizing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">border-box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 宽度包含 padding 和 border */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;             </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 实际宽度为 200px（父内容区域宽度） */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 内边距从 200px 中扣除 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 边框从 200px 中扣除 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="四、常见问题与场景" tabindex="-1"><strong>四、常见问题与场景</strong> <a class="header-anchor" href="#四、常见问题与场景" aria-label="Permalink to &quot;**四、常见问题与场景**&quot;">​</a></h3><h4 id="_1-子元素溢出父容器" tabindex="-1">1. <strong>子元素溢出父容器</strong> <a class="header-anchor" href="#_1-子元素溢出父容器" aria-label="Permalink to &quot;1. **子元素溢出父容器**&quot;">​</a></h4><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;parent&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;child&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;内容&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.parent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 200px */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 总宽度变为 200px + 40px = 240px → 溢出父容器 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>解决方案</strong>：</p><ul><li>为子元素设置 <code>box-sizing: border-box</code>，使其宽度包含内边距和边框。</li></ul><h4 id="_2-绝对定位元素的宽度适配" tabindex="-1">2. <strong>绝对定位元素的宽度适配</strong> <a class="header-anchor" href="#_2-绝对定位元素的宽度适配" aria-label="Permalink to &quot;2. **绝对定位元素的宽度适配**&quot;">​</a></h4><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.parent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">relative</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">absolute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 240px（父内容区域 200px + 内边距 40px） */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="五、总结" tabindex="-1"><strong>五、总结</strong> <a class="header-anchor" href="#五、总结" aria-label="Permalink to &quot;**五、总结**&quot;">​</a></h3><ul><li><strong><code>width: 100%</code> 默认相对于包含块的 <code>content-box</code> 宽度</strong>。</li><li><strong>绝对定位元素</strong>的 <code>width: 100%</code> 相对于包含块的 <code>padding-box</code> 宽度。</li><li>使用 <code>box-sizing: border-box</code> 可让 <code>width</code> 包含 <code>padding</code> 和 <code>border</code>，避免布局溢出。</li></ul><p>理解包含块的定义和 <code>box-sizing</code> 的作用，是控制元素尺寸和实现精准布局的关键。</p>`,69))])}const F=t(d,[["render",o]]);export{C as __pageData,F as default};
